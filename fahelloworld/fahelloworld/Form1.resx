<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="MerhabaDunyaBtn.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>